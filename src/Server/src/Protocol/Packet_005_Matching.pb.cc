// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Packet_005_Matching.proto

#include "Packet_005_Matching.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Protocol {
PROTOBUF_CONSTEXPR C_MATCHING_START::C_MATCHING_START(
    ::_pbi::ConstantInitialized) {}
struct C_MATCHING_STARTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_MATCHING_STARTDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_MATCHING_STARTDefaultTypeInternal() {}
  union {
    C_MATCHING_START _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_MATCHING_STARTDefaultTypeInternal _C_MATCHING_START_default_instance_;
PROTOBUF_CONSTEXPR S_MATCHING_START::S_MATCHING_START(
    ::_pbi::ConstantInitialized) {}
struct S_MATCHING_STARTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCHING_STARTDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCHING_STARTDefaultTypeInternal() {}
  union {
    S_MATCHING_START _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCHING_STARTDefaultTypeInternal _S_MATCHING_START_default_instance_;
PROTOBUF_CONSTEXPR S_MATCHING_FINISH::S_MATCHING_FINISH(
    ::_pbi::ConstantInitialized) {}
struct S_MATCHING_FINISHDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCHING_FINISHDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCHING_FINISHDefaultTypeInternal() {}
  union {
    S_MATCHING_FINISH _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCHING_FINISHDefaultTypeInternal _S_MATCHING_FINISH_default_instance_;
PROTOBUF_CONSTEXPR C_MATCHING_GET_HOST::C_MATCHING_GET_HOST(
    ::_pbi::ConstantInitialized) {}
struct C_MATCHING_GET_HOSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_MATCHING_GET_HOSTDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_MATCHING_GET_HOSTDefaultTypeInternal() {}
  union {
    C_MATCHING_GET_HOST _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_MATCHING_GET_HOSTDefaultTypeInternal _C_MATCHING_GET_HOST_default_instance_;
PROTOBUF_CONSTEXPR S_MATCHING_HOST::S_MATCHING_HOST(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.clientid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_MATCHING_HOSTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCHING_HOSTDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCHING_HOSTDefaultTypeInternal() {}
  union {
    S_MATCHING_HOST _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCHING_HOSTDefaultTypeInternal _S_MATCHING_HOST_default_instance_;
PROTOBUF_CONSTEXPR S_MATCHING_ROUND_START::S_MATCHING_ROUND_START(
    ::_pbi::ConstantInitialized) {}
struct S_MATCHING_ROUND_STARTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCHING_ROUND_STARTDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCHING_ROUND_STARTDefaultTypeInternal() {}
  union {
    S_MATCHING_ROUND_START _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCHING_ROUND_STARTDefaultTypeInternal _S_MATCHING_ROUND_START_default_instance_;
PROTOBUF_CONSTEXPR S_MATCHING_ROUND_FINISH::S_MATCHING_ROUND_FINISH(
    ::_pbi::ConstantInitialized) {}
struct S_MATCHING_ROUND_FINISHDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCHING_ROUND_FINISHDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCHING_ROUND_FINISHDefaultTypeInternal() {}
  union {
    S_MATCHING_ROUND_FINISH _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCHING_ROUND_FINISHDefaultTypeInternal _S_MATCHING_ROUND_FINISH_default_instance_;
PROTOBUF_CONSTEXPR S_MATCHING_TILES::S_MATCHING_TILES(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tiles_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_MATCHING_TILESDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCHING_TILESDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCHING_TILESDefaultTypeInternal() {}
  union {
    S_MATCHING_TILES _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCHING_TILESDefaultTypeInternal _S_MATCHING_TILES_default_instance_;
PROTOBUF_CONSTEXPR S_MATCHING_HINT::S_MATCHING_HINT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.hints_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_MATCHING_HINTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCHING_HINTDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCHING_HINTDefaultTypeInternal() {}
  union {
    S_MATCHING_HINT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCHING_HINTDefaultTypeInternal _S_MATCHING_HINT_default_instance_;
PROTOBUF_CONSTEXPR S_MATCHING_PROBLEM::S_MATCHING_PROBLEM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.problem_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.timetodestroy_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S_MATCHING_PROBLEMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCHING_PROBLEMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCHING_PROBLEMDefaultTypeInternal() {}
  union {
    S_MATCHING_PROBLEM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCHING_PROBLEMDefaultTypeInternal _S_MATCHING_PROBLEM_default_instance_;
PROTOBUF_CONSTEXPR S_MATCHING_DESTROY::S_MATCHING_DESTROY(
    ::_pbi::ConstantInitialized) {}
struct S_MATCHING_DESTROYDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCHING_DESTROYDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCHING_DESTROYDefaultTypeInternal() {}
  union {
    S_MATCHING_DESTROY _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCHING_DESTROYDefaultTypeInternal _S_MATCHING_DESTROY_default_instance_;
PROTOBUF_CONSTEXPR S_MATCHING_QUIZ_DISAPPEAR::S_MATCHING_QUIZ_DISAPPEAR(
    ::_pbi::ConstantInitialized) {}
struct S_MATCHING_QUIZ_DISAPPEARDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_MATCHING_QUIZ_DISAPPEARDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_MATCHING_QUIZ_DISAPPEARDefaultTypeInternal() {}
  union {
    S_MATCHING_QUIZ_DISAPPEAR _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_MATCHING_QUIZ_DISAPPEARDefaultTypeInternal _S_MATCHING_QUIZ_DISAPPEAR_default_instance_;
PROTOBUF_CONSTEXPR C_MATCHING_DIE::C_MATCHING_DIE(
    ::_pbi::ConstantInitialized) {}
struct C_MATCHING_DIEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_MATCHING_DIEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_MATCHING_DIEDefaultTypeInternal() {}
  union {
    C_MATCHING_DIE _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_MATCHING_DIEDefaultTypeInternal _C_MATCHING_DIE_default_instance_;
}  // namespace Protocol
static ::_pb::Metadata file_level_metadata_Packet_5f005_5fMatching_2eproto[13];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Packet_5f005_5fMatching_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Packet_5f005_5fMatching_2eproto = nullptr;

const uint32_t TableStruct_Packet_5f005_5fMatching_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_MATCHING_START, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MATCHING_START, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MATCHING_FINISH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_MATCHING_GET_HOST, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MATCHING_HOST, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MATCHING_HOST, _impl_.clientid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MATCHING_ROUND_START, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MATCHING_ROUND_FINISH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MATCHING_TILES, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MATCHING_TILES, _impl_.tiles_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MATCHING_HINT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MATCHING_HINT, _impl_.hints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MATCHING_PROBLEM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MATCHING_PROBLEM, _impl_.problem_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MATCHING_PROBLEM, _impl_.timetodestroy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MATCHING_DESTROY, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S_MATCHING_QUIZ_DISAPPEAR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C_MATCHING_DIE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Protocol::C_MATCHING_START)},
  { 6, -1, -1, sizeof(::Protocol::S_MATCHING_START)},
  { 12, -1, -1, sizeof(::Protocol::S_MATCHING_FINISH)},
  { 18, -1, -1, sizeof(::Protocol::C_MATCHING_GET_HOST)},
  { 24, -1, -1, sizeof(::Protocol::S_MATCHING_HOST)},
  { 31, -1, -1, sizeof(::Protocol::S_MATCHING_ROUND_START)},
  { 37, -1, -1, sizeof(::Protocol::S_MATCHING_ROUND_FINISH)},
  { 43, -1, -1, sizeof(::Protocol::S_MATCHING_TILES)},
  { 50, -1, -1, sizeof(::Protocol::S_MATCHING_HINT)},
  { 57, -1, -1, sizeof(::Protocol::S_MATCHING_PROBLEM)},
  { 65, -1, -1, sizeof(::Protocol::S_MATCHING_DESTROY)},
  { 71, -1, -1, sizeof(::Protocol::S_MATCHING_QUIZ_DISAPPEAR)},
  { 77, -1, -1, sizeof(::Protocol::C_MATCHING_DIE)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Protocol::_C_MATCHING_START_default_instance_._instance,
  &::Protocol::_S_MATCHING_START_default_instance_._instance,
  &::Protocol::_S_MATCHING_FINISH_default_instance_._instance,
  &::Protocol::_C_MATCHING_GET_HOST_default_instance_._instance,
  &::Protocol::_S_MATCHING_HOST_default_instance_._instance,
  &::Protocol::_S_MATCHING_ROUND_START_default_instance_._instance,
  &::Protocol::_S_MATCHING_ROUND_FINISH_default_instance_._instance,
  &::Protocol::_S_MATCHING_TILES_default_instance_._instance,
  &::Protocol::_S_MATCHING_HINT_default_instance_._instance,
  &::Protocol::_S_MATCHING_PROBLEM_default_instance_._instance,
  &::Protocol::_S_MATCHING_DESTROY_default_instance_._instance,
  &::Protocol::_S_MATCHING_QUIZ_DISAPPEAR_default_instance_._instance,
  &::Protocol::_C_MATCHING_DIE_default_instance_._instance,
};

const char descriptor_table_protodef_Packet_5f005_5fMatching_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\031Packet_005_Matching.proto\022\010Protocol\"\022\n"
  "\020C_MATCHING_START\"\022\n\020S_MATCHING_START\"\023\n"
  "\021S_MATCHING_FINISH\"\025\n\023C_MATCHING_GET_HOS"
  "T\"#\n\017S_MATCHING_HOST\022\020\n\010clientId\030\001 \001(\t\"\030"
  "\n\026S_MATCHING_ROUND_START\"\031\n\027S_MATCHING_R"
  "OUND_FINISH\"!\n\020S_MATCHING_TILES\022\r\n\005tiles"
  "\030\001 \003(\t\" \n\017S_MATCHING_HINT\022\r\n\005hints\030\001 \003(\010"
  "\"<\n\022S_MATCHING_PROBLEM\022\017\n\007problem\030\001 \001(\t\022"
  "\025\n\rtimeToDestroy\030\002 \001(\005\"\024\n\022S_MATCHING_DES"
  "TROY\"\033\n\031S_MATCHING_QUIZ_DISAPPEAR\"\020\n\016C_M"
  "ATCHING_DIEb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_Packet_5f005_5fMatching_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Packet_5f005_5fMatching_2eproto = {
    false, false, 419, descriptor_table_protodef_Packet_5f005_5fMatching_2eproto,
    "Packet_005_Matching.proto",
    &descriptor_table_Packet_5f005_5fMatching_2eproto_once, nullptr, 0, 13,
    schemas, file_default_instances, TableStruct_Packet_5f005_5fMatching_2eproto::offsets,
    file_level_metadata_Packet_5f005_5fMatching_2eproto, file_level_enum_descriptors_Packet_5f005_5fMatching_2eproto,
    file_level_service_descriptors_Packet_5f005_5fMatching_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Packet_5f005_5fMatching_2eproto_getter() {
  return &descriptor_table_Packet_5f005_5fMatching_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Packet_5f005_5fMatching_2eproto(&descriptor_table_Packet_5f005_5fMatching_2eproto);
namespace Protocol {

// ===================================================================

class C_MATCHING_START::_Internal {
 public:
};

C_MATCHING_START::C_MATCHING_START(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.C_MATCHING_START)
}
C_MATCHING_START::C_MATCHING_START(const C_MATCHING_START& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  C_MATCHING_START* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C_MATCHING_START)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_MATCHING_START::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_MATCHING_START::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata C_MATCHING_START::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_5f005_5fMatching_2eproto_getter, &descriptor_table_Packet_5f005_5fMatching_2eproto_once,
      file_level_metadata_Packet_5f005_5fMatching_2eproto[0]);
}

// ===================================================================

class S_MATCHING_START::_Internal {
 public:
};

S_MATCHING_START::S_MATCHING_START(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.S_MATCHING_START)
}
S_MATCHING_START::S_MATCHING_START(const S_MATCHING_START& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  S_MATCHING_START* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S_MATCHING_START)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCHING_START::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCHING_START::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata S_MATCHING_START::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_5f005_5fMatching_2eproto_getter, &descriptor_table_Packet_5f005_5fMatching_2eproto_once,
      file_level_metadata_Packet_5f005_5fMatching_2eproto[1]);
}

// ===================================================================

class S_MATCHING_FINISH::_Internal {
 public:
};

S_MATCHING_FINISH::S_MATCHING_FINISH(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.S_MATCHING_FINISH)
}
S_MATCHING_FINISH::S_MATCHING_FINISH(const S_MATCHING_FINISH& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  S_MATCHING_FINISH* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S_MATCHING_FINISH)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCHING_FINISH::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCHING_FINISH::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata S_MATCHING_FINISH::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_5f005_5fMatching_2eproto_getter, &descriptor_table_Packet_5f005_5fMatching_2eproto_once,
      file_level_metadata_Packet_5f005_5fMatching_2eproto[2]);
}

// ===================================================================

class C_MATCHING_GET_HOST::_Internal {
 public:
};

C_MATCHING_GET_HOST::C_MATCHING_GET_HOST(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.C_MATCHING_GET_HOST)
}
C_MATCHING_GET_HOST::C_MATCHING_GET_HOST(const C_MATCHING_GET_HOST& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  C_MATCHING_GET_HOST* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C_MATCHING_GET_HOST)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_MATCHING_GET_HOST::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_MATCHING_GET_HOST::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata C_MATCHING_GET_HOST::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_5f005_5fMatching_2eproto_getter, &descriptor_table_Packet_5f005_5fMatching_2eproto_once,
      file_level_metadata_Packet_5f005_5fMatching_2eproto[3]);
}

// ===================================================================

class S_MATCHING_HOST::_Internal {
 public:
};

S_MATCHING_HOST::S_MATCHING_HOST(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_MATCHING_HOST)
}
S_MATCHING_HOST::S_MATCHING_HOST(const S_MATCHING_HOST& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_MATCHING_HOST* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.clientid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.clientid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.clientid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_clientid().empty()) {
    _this->_impl_.clientid_.Set(from._internal_clientid(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S_MATCHING_HOST)
}

inline void S_MATCHING_HOST::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.clientid_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.clientid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.clientid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

S_MATCHING_HOST::~S_MATCHING_HOST() {
  // @@protoc_insertion_point(destructor:Protocol.S_MATCHING_HOST)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_MATCHING_HOST::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.clientid_.Destroy();
}

void S_MATCHING_HOST::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_MATCHING_HOST::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_MATCHING_HOST)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.clientid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_MATCHING_HOST::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string clientId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_clientid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.S_MATCHING_HOST.clientId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_MATCHING_HOST::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_MATCHING_HOST)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string clientId = 1;
  if (!this->_internal_clientid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_clientid().data(), static_cast<int>(this->_internal_clientid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S_MATCHING_HOST.clientId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_clientid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_MATCHING_HOST)
  return target;
}

size_t S_MATCHING_HOST::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_MATCHING_HOST)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string clientId = 1;
  if (!this->_internal_clientid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_clientid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCHING_HOST::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_MATCHING_HOST::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCHING_HOST::GetClassData() const { return &_class_data_; }


void S_MATCHING_HOST::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_MATCHING_HOST*>(&to_msg);
  auto& from = static_cast<const S_MATCHING_HOST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_MATCHING_HOST)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_clientid().empty()) {
    _this->_internal_set_clientid(from._internal_clientid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_MATCHING_HOST::CopyFrom(const S_MATCHING_HOST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_MATCHING_HOST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MATCHING_HOST::IsInitialized() const {
  return true;
}

void S_MATCHING_HOST::InternalSwap(S_MATCHING_HOST* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.clientid_, lhs_arena,
      &other->_impl_.clientid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata S_MATCHING_HOST::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_5f005_5fMatching_2eproto_getter, &descriptor_table_Packet_5f005_5fMatching_2eproto_once,
      file_level_metadata_Packet_5f005_5fMatching_2eproto[4]);
}

// ===================================================================

class S_MATCHING_ROUND_START::_Internal {
 public:
};

S_MATCHING_ROUND_START::S_MATCHING_ROUND_START(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.S_MATCHING_ROUND_START)
}
S_MATCHING_ROUND_START::S_MATCHING_ROUND_START(const S_MATCHING_ROUND_START& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  S_MATCHING_ROUND_START* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S_MATCHING_ROUND_START)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCHING_ROUND_START::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCHING_ROUND_START::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata S_MATCHING_ROUND_START::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_5f005_5fMatching_2eproto_getter, &descriptor_table_Packet_5f005_5fMatching_2eproto_once,
      file_level_metadata_Packet_5f005_5fMatching_2eproto[5]);
}

// ===================================================================

class S_MATCHING_ROUND_FINISH::_Internal {
 public:
};

S_MATCHING_ROUND_FINISH::S_MATCHING_ROUND_FINISH(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.S_MATCHING_ROUND_FINISH)
}
S_MATCHING_ROUND_FINISH::S_MATCHING_ROUND_FINISH(const S_MATCHING_ROUND_FINISH& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  S_MATCHING_ROUND_FINISH* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S_MATCHING_ROUND_FINISH)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCHING_ROUND_FINISH::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCHING_ROUND_FINISH::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata S_MATCHING_ROUND_FINISH::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_5f005_5fMatching_2eproto_getter, &descriptor_table_Packet_5f005_5fMatching_2eproto_once,
      file_level_metadata_Packet_5f005_5fMatching_2eproto[6]);
}

// ===================================================================

class S_MATCHING_TILES::_Internal {
 public:
};

S_MATCHING_TILES::S_MATCHING_TILES(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_MATCHING_TILES)
}
S_MATCHING_TILES::S_MATCHING_TILES(const S_MATCHING_TILES& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_MATCHING_TILES* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tiles_){from._impl_.tiles_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S_MATCHING_TILES)
}

inline void S_MATCHING_TILES::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tiles_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_MATCHING_TILES::~S_MATCHING_TILES() {
  // @@protoc_insertion_point(destructor:Protocol.S_MATCHING_TILES)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_MATCHING_TILES::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tiles_.~RepeatedPtrField();
}

void S_MATCHING_TILES::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_MATCHING_TILES::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_MATCHING_TILES)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tiles_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_MATCHING_TILES::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string tiles = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tiles();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "Protocol.S_MATCHING_TILES.tiles"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_MATCHING_TILES::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_MATCHING_TILES)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string tiles = 1;
  for (int i = 0, n = this->_internal_tiles_size(); i < n; i++) {
    const auto& s = this->_internal_tiles(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S_MATCHING_TILES.tiles");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_MATCHING_TILES)
  return target;
}

size_t S_MATCHING_TILES::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_MATCHING_TILES)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tiles = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.tiles_.size());
  for (int i = 0, n = _impl_.tiles_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.tiles_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCHING_TILES::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_MATCHING_TILES::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCHING_TILES::GetClassData() const { return &_class_data_; }


void S_MATCHING_TILES::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_MATCHING_TILES*>(&to_msg);
  auto& from = static_cast<const S_MATCHING_TILES&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_MATCHING_TILES)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tiles_.MergeFrom(from._impl_.tiles_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_MATCHING_TILES::CopyFrom(const S_MATCHING_TILES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_MATCHING_TILES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MATCHING_TILES::IsInitialized() const {
  return true;
}

void S_MATCHING_TILES::InternalSwap(S_MATCHING_TILES* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tiles_.InternalSwap(&other->_impl_.tiles_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_MATCHING_TILES::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_5f005_5fMatching_2eproto_getter, &descriptor_table_Packet_5f005_5fMatching_2eproto_once,
      file_level_metadata_Packet_5f005_5fMatching_2eproto[7]);
}

// ===================================================================

class S_MATCHING_HINT::_Internal {
 public:
};

S_MATCHING_HINT::S_MATCHING_HINT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_MATCHING_HINT)
}
S_MATCHING_HINT::S_MATCHING_HINT(const S_MATCHING_HINT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_MATCHING_HINT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.hints_){from._impl_.hints_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S_MATCHING_HINT)
}

inline void S_MATCHING_HINT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.hints_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S_MATCHING_HINT::~S_MATCHING_HINT() {
  // @@protoc_insertion_point(destructor:Protocol.S_MATCHING_HINT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_MATCHING_HINT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hints_.~RepeatedField();
}

void S_MATCHING_HINT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_MATCHING_HINT::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_MATCHING_HINT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hints_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_MATCHING_HINT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bool hints = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_hints(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_hints(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_MATCHING_HINT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_MATCHING_HINT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool hints = 1;
  if (this->_internal_hints_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_hints(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_MATCHING_HINT)
  return target;
}

size_t S_MATCHING_HINT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_MATCHING_HINT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bool hints = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_hints_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCHING_HINT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_MATCHING_HINT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCHING_HINT::GetClassData() const { return &_class_data_; }


void S_MATCHING_HINT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_MATCHING_HINT*>(&to_msg);
  auto& from = static_cast<const S_MATCHING_HINT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_MATCHING_HINT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.hints_.MergeFrom(from._impl_.hints_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_MATCHING_HINT::CopyFrom(const S_MATCHING_HINT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_MATCHING_HINT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MATCHING_HINT::IsInitialized() const {
  return true;
}

void S_MATCHING_HINT::InternalSwap(S_MATCHING_HINT* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hints_.InternalSwap(&other->_impl_.hints_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_MATCHING_HINT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_5f005_5fMatching_2eproto_getter, &descriptor_table_Packet_5f005_5fMatching_2eproto_once,
      file_level_metadata_Packet_5f005_5fMatching_2eproto[8]);
}

// ===================================================================

class S_MATCHING_PROBLEM::_Internal {
 public:
};

S_MATCHING_PROBLEM::S_MATCHING_PROBLEM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_MATCHING_PROBLEM)
}
S_MATCHING_PROBLEM::S_MATCHING_PROBLEM(const S_MATCHING_PROBLEM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S_MATCHING_PROBLEM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.problem_){}
    , decltype(_impl_.timetodestroy_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.problem_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.problem_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_problem().empty()) {
    _this->_impl_.problem_.Set(from._internal_problem(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.timetodestroy_ = from._impl_.timetodestroy_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S_MATCHING_PROBLEM)
}

inline void S_MATCHING_PROBLEM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.problem_){}
    , decltype(_impl_.timetodestroy_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.problem_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.problem_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

S_MATCHING_PROBLEM::~S_MATCHING_PROBLEM() {
  // @@protoc_insertion_point(destructor:Protocol.S_MATCHING_PROBLEM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_MATCHING_PROBLEM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.problem_.Destroy();
}

void S_MATCHING_PROBLEM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S_MATCHING_PROBLEM::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_MATCHING_PROBLEM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.problem_.ClearToEmpty();
  _impl_.timetodestroy_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_MATCHING_PROBLEM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string problem = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_problem();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.S_MATCHING_PROBLEM.problem"));
        } else
          goto handle_unusual;
        continue;
      // int32 timeToDestroy = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.timetodestroy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_MATCHING_PROBLEM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_MATCHING_PROBLEM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string problem = 1;
  if (!this->_internal_problem().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_problem().data(), static_cast<int>(this->_internal_problem().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S_MATCHING_PROBLEM.problem");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_problem(), target);
  }

  // int32 timeToDestroy = 2;
  if (this->_internal_timetodestroy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_timetodestroy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_MATCHING_PROBLEM)
  return target;
}

size_t S_MATCHING_PROBLEM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S_MATCHING_PROBLEM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string problem = 1;
  if (!this->_internal_problem().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_problem());
  }

  // int32 timeToDestroy = 2;
  if (this->_internal_timetodestroy() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_timetodestroy());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCHING_PROBLEM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S_MATCHING_PROBLEM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCHING_PROBLEM::GetClassData() const { return &_class_data_; }


void S_MATCHING_PROBLEM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S_MATCHING_PROBLEM*>(&to_msg);
  auto& from = static_cast<const S_MATCHING_PROBLEM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_MATCHING_PROBLEM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_problem().empty()) {
    _this->_internal_set_problem(from._internal_problem());
  }
  if (from._internal_timetodestroy() != 0) {
    _this->_internal_set_timetodestroy(from._internal_timetodestroy());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_MATCHING_PROBLEM::CopyFrom(const S_MATCHING_PROBLEM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_MATCHING_PROBLEM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MATCHING_PROBLEM::IsInitialized() const {
  return true;
}

void S_MATCHING_PROBLEM::InternalSwap(S_MATCHING_PROBLEM* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.problem_, lhs_arena,
      &other->_impl_.problem_, rhs_arena
  );
  swap(_impl_.timetodestroy_, other->_impl_.timetodestroy_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_MATCHING_PROBLEM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_5f005_5fMatching_2eproto_getter, &descriptor_table_Packet_5f005_5fMatching_2eproto_once,
      file_level_metadata_Packet_5f005_5fMatching_2eproto[9]);
}

// ===================================================================

class S_MATCHING_DESTROY::_Internal {
 public:
};

S_MATCHING_DESTROY::S_MATCHING_DESTROY(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.S_MATCHING_DESTROY)
}
S_MATCHING_DESTROY::S_MATCHING_DESTROY(const S_MATCHING_DESTROY& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  S_MATCHING_DESTROY* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S_MATCHING_DESTROY)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCHING_DESTROY::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCHING_DESTROY::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata S_MATCHING_DESTROY::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_5f005_5fMatching_2eproto_getter, &descriptor_table_Packet_5f005_5fMatching_2eproto_once,
      file_level_metadata_Packet_5f005_5fMatching_2eproto[10]);
}

// ===================================================================

class S_MATCHING_QUIZ_DISAPPEAR::_Internal {
 public:
};

S_MATCHING_QUIZ_DISAPPEAR::S_MATCHING_QUIZ_DISAPPEAR(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.S_MATCHING_QUIZ_DISAPPEAR)
}
S_MATCHING_QUIZ_DISAPPEAR::S_MATCHING_QUIZ_DISAPPEAR(const S_MATCHING_QUIZ_DISAPPEAR& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  S_MATCHING_QUIZ_DISAPPEAR* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S_MATCHING_QUIZ_DISAPPEAR)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_MATCHING_QUIZ_DISAPPEAR::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_MATCHING_QUIZ_DISAPPEAR::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata S_MATCHING_QUIZ_DISAPPEAR::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_5f005_5fMatching_2eproto_getter, &descriptor_table_Packet_5f005_5fMatching_2eproto_once,
      file_level_metadata_Packet_5f005_5fMatching_2eproto[11]);
}

// ===================================================================

class C_MATCHING_DIE::_Internal {
 public:
};

C_MATCHING_DIE::C_MATCHING_DIE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.C_MATCHING_DIE)
}
C_MATCHING_DIE::C_MATCHING_DIE(const C_MATCHING_DIE& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  C_MATCHING_DIE* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C_MATCHING_DIE)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_MATCHING_DIE::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_MATCHING_DIE::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata C_MATCHING_DIE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Packet_5f005_5fMatching_2eproto_getter, &descriptor_table_Packet_5f005_5fMatching_2eproto_once,
      file_level_metadata_Packet_5f005_5fMatching_2eproto[12]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Protocol::C_MATCHING_START*
Arena::CreateMaybeMessage< ::Protocol::C_MATCHING_START >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C_MATCHING_START >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_MATCHING_START*
Arena::CreateMaybeMessage< ::Protocol::S_MATCHING_START >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_MATCHING_START >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_MATCHING_FINISH*
Arena::CreateMaybeMessage< ::Protocol::S_MATCHING_FINISH >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_MATCHING_FINISH >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C_MATCHING_GET_HOST*
Arena::CreateMaybeMessage< ::Protocol::C_MATCHING_GET_HOST >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C_MATCHING_GET_HOST >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_MATCHING_HOST*
Arena::CreateMaybeMessage< ::Protocol::S_MATCHING_HOST >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_MATCHING_HOST >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_MATCHING_ROUND_START*
Arena::CreateMaybeMessage< ::Protocol::S_MATCHING_ROUND_START >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_MATCHING_ROUND_START >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_MATCHING_ROUND_FINISH*
Arena::CreateMaybeMessage< ::Protocol::S_MATCHING_ROUND_FINISH >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_MATCHING_ROUND_FINISH >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_MATCHING_TILES*
Arena::CreateMaybeMessage< ::Protocol::S_MATCHING_TILES >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_MATCHING_TILES >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_MATCHING_HINT*
Arena::CreateMaybeMessage< ::Protocol::S_MATCHING_HINT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_MATCHING_HINT >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_MATCHING_PROBLEM*
Arena::CreateMaybeMessage< ::Protocol::S_MATCHING_PROBLEM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_MATCHING_PROBLEM >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_MATCHING_DESTROY*
Arena::CreateMaybeMessage< ::Protocol::S_MATCHING_DESTROY >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_MATCHING_DESTROY >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S_MATCHING_QUIZ_DISAPPEAR*
Arena::CreateMaybeMessage< ::Protocol::S_MATCHING_QUIZ_DISAPPEAR >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S_MATCHING_QUIZ_DISAPPEAR >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C_MATCHING_DIE*
Arena::CreateMaybeMessage< ::Protocol::C_MATCHING_DIE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C_MATCHING_DIE >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
